2022-08-14 10:18:42 INFO   --- [main] c.s.s.SpringCloudGatewayApplication : Starting SpringCloudGatewayApplication using Java 11.0.16 on rashedul-ThinkPad-X1-Yoga-1st with PID 8895 (/home/rashedul/Project/city-bank/back-end/smb-spring-cloud-gateway/target/classes started by rashedul in /home/rashedul/Project/city-bank/back-end/smb-spring-cloud-gateway)
2022-08-14 10:18:42 INFO   --- [main] c.s.s.SpringCloudGatewayApplication : The following 1 profile is active: "dev"
2022-08-14 10:18:46 INFO   --- [main] c.z.h.HikariDataSource : HikariPool-1 - Starting...
2022-08-14 10:18:46 INFO   --- [main] c.z.h.HikariDataSource : HikariPool-1 - Start completed.
2022-08-14 10:19:20 INFO   --- [main] c.n.d.DiscoveryClient : Initializing Eureka in region us-east-1
2022-08-14 10:19:20 INFO   --- [main] c.n.d.s.r.a.ConfigClusterResolver : Resolving eureka endpoints via configuration
2022-08-14 10:19:20 INFO   --- [main] c.n.d.DiscoveryClient : Disable delta property : false
2022-08-14 10:19:20 INFO   --- [main] c.n.d.DiscoveryClient : Single vip registry refresh property : null
2022-08-14 10:19:20 INFO   --- [main] c.n.d.DiscoveryClient : Force full registry fetch : false
2022-08-14 10:19:20 INFO   --- [main] c.n.d.DiscoveryClient : Application is null : false
2022-08-14 10:19:20 INFO   --- [main] c.n.d.DiscoveryClient : Registered Applications size is zero : true
2022-08-14 10:19:20 INFO   --- [main] c.n.d.DiscoveryClient : Application version is -1: true
2022-08-14 10:19:20 INFO   --- [main] c.n.d.DiscoveryClient : Getting all instance registry info from the eureka server
2022-08-14 10:19:20 INFO   --- [main] c.n.d.DiscoveryClient : The response status is 200
2022-08-14 10:19:20 INFO   --- [main] c.n.d.DiscoveryClient : Starting heartbeat executor: renew interval is: 30
2022-08-14 10:19:20 INFO   --- [main] c.n.d.InstanceInfoReplicator : InstanceInfoReplicator onDemand update allowed rate per min is 4
2022-08-14 10:19:20 INFO   --- [main] c.n.d.DiscoveryClient : Discovery Client initialized at timestamp 1660450760708 with initial instances count: 0
2022-08-14 10:19:20 INFO   --- [main] c.n.d.DiscoveryClient : Saw local status change event StatusChangeEvent [timestamp=1660450760719, current=UP, previous=STARTING]
2022-08-14 10:19:20 INFO   --- [DiscoveryClient-InstanceInfoReplicator-0] c.n.d.DiscoveryClient : DiscoveryClient_API-GATEWAY/192.168.10.46:api-gateway:8081: registering service...
2022-08-14 10:19:20 INFO   --- [DiscoveryClient-InstanceInfoReplicator-0] c.n.d.DiscoveryClient : DiscoveryClient_API-GATEWAY/192.168.10.46:api-gateway:8081 - registration status: 204
2022-08-14 10:19:22 INFO   --- [main] c.s.s.SpringCloudGatewayApplication : Started SpringCloudGatewayApplication in 40.694 seconds (JVM running for 42.176)
2022-08-14 10:19:50 INFO   --- [DiscoveryClient-CacheRefreshExecutor-0] c.n.d.DiscoveryClient : Disable delta property : false
2022-08-14 10:19:50 INFO   --- [DiscoveryClient-CacheRefreshExecutor-0] c.n.d.DiscoveryClient : Single vip registry refresh property : null
2022-08-14 10:19:50 INFO   --- [DiscoveryClient-CacheRefreshExecutor-0] c.n.d.DiscoveryClient : Force full registry fetch : false
2022-08-14 10:19:50 INFO   --- [DiscoveryClient-CacheRefreshExecutor-0] c.n.d.DiscoveryClient : Application is null : false
2022-08-14 10:19:50 INFO   --- [DiscoveryClient-CacheRefreshExecutor-0] c.n.d.DiscoveryClient : Registered Applications size is zero : true
2022-08-14 10:19:50 INFO   --- [DiscoveryClient-CacheRefreshExecutor-0] c.n.d.DiscoveryClient : Application version is -1: false
2022-08-14 10:19:50 INFO   --- [DiscoveryClient-CacheRefreshExecutor-0] c.n.d.DiscoveryClient : Getting all instance registry info from the eureka server
2022-08-14 10:19:50 INFO   --- [DiscoveryClient-CacheRefreshExecutor-0] c.n.d.DiscoveryClient : The response status is 200
2022-08-14 10:24:20 INFO   --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.a.ConfigClusterResolver : Resolving eureka endpoints via configuration
2022-08-14 10:29:20 INFO   --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.a.ConfigClusterResolver : Resolving eureka endpoints via configuration
2022-08-14 10:34:20 INFO   --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.a.ConfigClusterResolver : Resolving eureka endpoints via configuration
2022-08-14 10:35:58 INFO   --- [http-nio-8081-exec-2] c.s.s.s.GlobalFilterSecurityService : Pre-Filter executed
2022-08-14 10:35:58 INFO   --- [http-nio-8081-exec-2] c.s.s.s.GlobalFilterSecurityService : Request path = /remittance-module/startCase/cs_data_capture
2022-08-14 10:35:58 INFO   --- [http-nio-8081-exec-2] c.s.s.s.GlobalFilterSecurityService : authorization [Bearer eyJyYW5kb20iOjM2MzgxODUyMCwiYWxnIjoiSFMyNTYifQ.eyJpc3MiOiJodHRwczovL2NpdHkzNjAudGhlY2l0eWJhbmsuY29tIiwic3ViIjoiY3MxMyIsInVzZXJJbmZvcm1hdGlvbiI6eyJ1c2VyUm9sZUlkIjoxODgsInNvbElkIjoiMTAxIiwidXNlck5hbWUiOiJjczEzIiwidXNlckdyb3VwIjoiQ1MiLCJicmFuY2hOYW1lIjoiUFJJTkNJUEFMIE9GRklDRSJ9fQ.aIH-G97dmhmUdmyH0Sro6dLiMRZKRaYV4gccz2UkDKY]
2022-08-14 10:35:58 INFO   --- [http-nio-8081-exec-2] c.s.s.s.GlobalFilterSecurityService : user-agent [PostmanRuntime/7.29.2]
2022-08-14 10:35:58 INFO   --- [http-nio-8081-exec-2] c.s.s.s.GlobalFilterSecurityService : accept [*/*]
2022-08-14 10:35:58 INFO   --- [http-nio-8081-exec-2] c.s.s.s.GlobalFilterSecurityService : postman-token [c4443ad2-d6f9-45c1-a0fa-a4fd792c09df]
2022-08-14 10:35:58 INFO   --- [http-nio-8081-exec-2] c.s.s.s.GlobalFilterSecurityService : host [localhost:8081]
2022-08-14 10:35:58 INFO   --- [http-nio-8081-exec-2] c.s.s.s.GlobalFilterSecurityService : accept-encoding [gzip, deflate, br]
2022-08-14 10:35:58 INFO   --- [http-nio-8081-exec-2] c.s.s.s.GlobalFilterSecurityService : connection [keep-alive]
2022-08-14 10:35:59 WARN   --- [http-nio-8081-exec-2] o.s.c.l.c.RoundRobinLoadBalancer : No servers available for service: remittance-module
2022-08-14 10:35:59 ERROR  --- [http-nio-8081-exec-2] c.s.s.s.GlobalFilterSecurityService :  Service invocation failed ,URL=http://localhost:8081/remittance-module/startCase/cs_data_capture
org.springframework.cloud.gateway.support.NotFoundException: 503 SERVICE_UNAVAILABLE "Unable to find instance for remittance-module"
	at org.springframework.cloud.gateway.support.NotFoundException.create(NotFoundException.java:45)
	at org.springframework.cloud.gateway.filter.ReactiveLoadBalancerClientFilter.lambda$filter$2(ReactiveLoadBalancerClientFilter.java:123)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:120)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:98)
	at reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:44)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drainAsync(FluxFlattenIterable.java:421)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drain(FluxFlattenIterable.java:686)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.onNext(FluxFlattenIterable.java:250)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.complete(MonoIgnoreThen.java:292)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onNext(MonoIgnoreThen.java:187)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:236)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:203)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onComplete(FluxDematerialize.java:121)
	at reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:91)
	at reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:44)
	at reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:340)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:227)
	at reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.request(FluxDematerialize.java:127)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:138)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:72)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:171)
	at reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onSubscribe(FluxDematerialize.java:77)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:165)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:87)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4400)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:263)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)
	at reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:128)
	at reactor.core.publisher.DrainUtils.postCompleteDrain(DrainUtils.java:132)
	at reactor.core.publisher.DrainUtils.postComplete(DrainUtils.java:187)
	at reactor.core.publisher.FluxMaterialize$MaterializeSubscriber.onComplete(FluxMaterialize.java:141)
	at reactor.core.publisher.FluxTake$TakeSubscriber.onComplete(FluxTake.java:153)
	at reactor.core.publisher.FluxTake$TakeSubscriber.onNext(FluxTake.java:133)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.SerializedSubscriber.onNext(SerializedSubscriber.java:99)
	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onNext(FluxTimeout.java:180)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)
	at reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:128)
	at org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting$FirstNonEmptyEmittingSubscriber.onComplete(FluxFirstNonEmptyEmitting.java:325)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:148)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:87)
	at reactor.core.publisher.Flux.subscribe(Flux.java:8469)
	at org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting$RaceCoordinator.subscribe(FluxFirstNonEmptyEmitting.java:203)
	at org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting.subscribe(FluxFirstNonEmptyEmitting.java:128)
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:62)
	at reactor.core.publisher.FluxDefer.subscribe(FluxDefer.java:54)
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:62)
	at reactor.core.publisher.FluxDefer.subscribe(FluxDefer.java:54)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4400)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:62)
	at reactor.core.publisher.FluxDefer.subscribe(FluxDefer.java:54)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4400)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:263)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
	at io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:38)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4400)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:263)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4400)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:263)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4400)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:263)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:282)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:863)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:120)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:120)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:282)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:863)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)
	at reactor.core.publisher.MonoFilterWhen$MonoFilterWhenMain.onNext(MonoFilterWhen.java:149)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2398)
	at reactor.core.publisher.MonoFilterWhen$MonoFilterWhenMain.onSubscribe(MonoFilterWhen.java:112)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4400)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:451)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onNext(FluxConcatMap.java:251)
	at reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:98)
	at reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:44)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:272)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:230)
	at reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.request(FluxDematerialize.java:127)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:236)
	at reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onSubscribe(FluxDematerialize.java:77)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:165)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:87)
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:62)
	at reactor.core.publisher.FluxDefer.subscribe(FluxDefer.java:54)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4400)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:451)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:219)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:165)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:87)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4400)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:263)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4400)
	at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:203)
	at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4385)
	at org.springframework.http.server.reactive.ServletHttpHandlerAdapter.service(ServletHttpHandlerAdapter.java:198)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
2022-08-14 10:35:59 INFO   --- [http-nio-8081-exec-2] c.s.s.s.GlobalFilterSecurityService : Last Post Global Filter
2022-08-14 10:39:20 INFO   --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.a.ConfigClusterResolver : Resolving eureka endpoints via configuration
2022-08-14 10:44:20 INFO   --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.a.ConfigClusterResolver : Resolving eureka endpoints via configuration
2022-08-14 10:49:20 INFO   --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.a.ConfigClusterResolver : Resolving eureka endpoints via configuration
2022-08-14 10:54:20 INFO   --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.a.ConfigClusterResolver : Resolving eureka endpoints via configuration
2022-08-14 10:59:20 INFO   --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.a.ConfigClusterResolver : Resolving eureka endpoints via configuration
2022-08-14 11:04:20 INFO   --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.a.ConfigClusterResolver : Resolving eureka endpoints via configuration
2022-08-14 11:09:20 INFO   --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.a.ConfigClusterResolver : Resolving eureka endpoints via configuration
